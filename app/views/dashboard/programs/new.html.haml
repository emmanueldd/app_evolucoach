= render 'layouts/header'
/ Content Area
.content-area.bg-dark-blue2.full-vh
  .container
    .row
      .col-12
        .object-content
          - if params[:program_type].blank?
            .text-center
              -# Avant d'arriver ici, faire une page pdf ou faire le programme sur l'outil.
              -# Une fois choisie, si c'est pdf, on est redirigé vers cette page avec un uploader de pdf, puis on est directement redirigé vers la suite tout en modifiant la page show du programme qui sans pdf montre l'outil
              %h2.white Quel type de programme souhaitez-vous ajouter ?
              %a.validate.g-blue-bg.fontbold.lg-btn{href: url_for(program_type: 'upload_pdf', user_has_client_id: params[:user_has_client_id])} Uploader un pdf
              %a.validate.g-blue-bg.fontbold.lg-btn{href: url_for(program_type: 'use_tool', user_has_client_id: params[:user_has_client_id])} Utiliser l'outil
          - else
            %p.fontlight Nom du programme
            = simple_form_for [:dashboard, @program] do |f|
              = f.input_field :user_has_client_id, as: :hidden, value: params[:user_has_client_id]
              %input.form-control{:name => "program[name]", :placeholder => "Exemple : découverte", :type => "text"}/
              - if params[:program_type] == 'upload_pdf'
                %label.display-block.text-center
                  %br
                  = f.input_field :file, style: 'opacity: 1', onchange: "readURL(this);"
                  %br
                  %br
                  .touch
                    = image_tag "touch.png", alt:"", class: 'banner-upload'
                    %p.fontlight Touche pour importer un PDF
              %button.validate.g-blue-bg.fontbold.lg-btn{:ref => "#", :type => "submit", :value => "Suivant →"} Suivant →
