:css
  .form-group ::placeholder {
    color: #fff !important;
  }

/ Banner
.banner-area{style: "background-image: url(#{@program.cover_url})"}
  .container
    .row
      %h1.fontlight
        PROGRAMME
        %br
        = @program.name
/ Banner
/ Content Area
.content-area.bg-dark-blue.mvh-70.page12
  .container
    .row
      .col-12
        .content-inner
          .pack-top.mb-30.fontlight
            %p.iblue
              #{@program.duration} semaines
              %span.white
                %br>/
                #{@program.frequency} séances/semaine
            %p.text-right
              %b #{number_to_currency(@program.price)}
          = simple_form_for [:dashboard, @program] do |f|
            .pack-profile-box.mb-30
              .pack-profile-img
                = image_tag current_user.avatar_url, alt:"Farid"
              %p
                = f.input :description, as: :text, label: false, input_html: { class: 'fontlight big-transparent-textarea full-width' } , required: true, placeholder: 'Décris ton programme ici', autofocus: true
            %br
            .page15.hour-check
              -# = f.input_field :pack_id, as: :hidden, value: @pack.id
              #courses
                = f.input :show_calendly_before_payment, as: :boolean, label: 'Afficher un Calendly avant le paiement', hint: 'Ex: Pour rassurer le client avant un achat conséquent.'
                #hide_payment_page_section{style: (f.object.show_calendly_before_payment || f.object.show_calendly_after_payment) ? '' : 'display: none'}
                  = f.input :hide_payment_page, as: :boolean, label: 'Masquer la page de paiement', hint: 'Ex: Pour transmettre le lien de paiement après un appel via Calendly.'
                %br
                = f.input :show_calendly_after_payment, as: :boolean, label: 'Afficher un Calendly après le paiement', hint: 'Ex: Faire un bilan avec le client, et lui proposer une ou plusieurs autres offres correspondant à son besoin.'
            %br
            %br
            .col#calendly_url_section{style: (f.object.show_calendly_before_payment || f.object.show_calendly_after_payment) ? '' : 'display: none'}
              = f.simple_fields_for :user, current_user do |course|
                = f.error_notification
                = course.input :calendly_url, label: 'Lien calendly', hint: 'S\'il est ajouté ou modifié, il se mettra à jour sur toutes les offres.', required: (f.object.show_calendly_before_payment || f.object.show_calendly_after_payment)

            = f.hidden_field :published, value: 'true'
            %button.margin-auto.validate.site-btn.fontbold.blue-bg{:ref => "#", :type => "submit"}
              Valider #{image_tag "tik.png", alt:""}
          -# Prochaine étape = pouvoir lui ajouter des exercices
/ Content Area
